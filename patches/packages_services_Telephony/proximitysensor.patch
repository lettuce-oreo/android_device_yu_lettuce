From 5bdb4d6afaefc2446423d426467eb312c41cf157 Mon Sep 17 00:00:00 2001
From: Zhu Youhua <youhua@codeaurora.org>
Date: Wed, 18 Oct 2017 19:39:06 -0400
Subject: [PATCH] TeleService: Add a controller for proximity sensor

Add the setting for enabling proximity sensor or not when calling

Ported from CAF by @Sirhc95

Change-Id: I06807c37f2bb4a50e0e3051f20305549ab47e846
CRs-Fixed: 914710
Signed-off-by: Ad!thya R <adithya.r02@outlook.com>
---
 res/values/qtistrings.xml                          | 39 ++++++++++++++++++++++
 res/xml/phone_account_settings.xml                 |  6 ++++
 src/com/android/phone/Constants.java               |  5 +++
 .../settings/PhoneAccountSettingsFragment.java     | 22 ++++++++++++
 4 files changed, 72 insertions(+)
 create mode 100644 res/values/qtistrings.xml

diff --git a/res/values/qtistrings.xml b/res/values/qtistrings.xml
new file mode 100644
index 00000000..4a28e75e
--- /dev/null
+++ b/res/values/qtistrings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+  ~ Copyright (c) 2015, The Linux Foundation. All rights reserved.
+  ~
+  ~ Redistribution and use in source and binary forms, with or without
+  ~ modification, are permitted provided that the following conditions are
+  ~ met:
+  ~      Redistributions of source code must retain the above copyright
+  ~       notice, this list of conditions and the following disclaimer.
+  ~      Redistributions in binary form must reproduce the above
+  ~       copyright notice, this list of conditions and the following
+  ~       disclaimer in the documentation and/or other materials provided
+  ~       with the distribution.
+  ~      Neither the name of The Linux Foundation nor the names of its
+  ~       contributors may be used to endorse or promote products derived
+  ~       from this software without specific prior written permission.
+  ~
+  ~ THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
+  ~ WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+  ~ MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
+  ~ ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
+  ~ BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+  ~ CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+  ~ SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
+  ~ BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
+  ~ WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
+  ~ OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
+  ~ IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+  ~
+  -->
+
+<!-- The xml contains Qti specific resource strings neede for any value added features. -->
+<resources>
+     
+    <!-- Proximity Sensor -->
+    <string name="proximity_mode_title">Turn on proximity sensor</string>
+    <string name="proximity_on_summary">When you answer a call, the screen will be turned off to save power.</string>
+    <string name="proximity_off_summary">When you answer a call, the screen will be turned on always.</string>
+</resources>
diff --git a/res/xml/phone_account_settings.xml b/res/xml/phone_account_settings.xml
index 8e0d17a1..b0ed92f4 100644
--- a/res/xml/phone_account_settings.xml
+++ b/res/xml/phone_account_settings.xml
@@ -72,4 +72,10 @@
 
     </PreferenceCategory>
 
+    <SwitchPreference
+            android:key="button_proximity_key"
+            android:title="@string/proximity_mode_title"
+            android:summary="@string/proximity_on_summary"
+            android:persistent="false" />
+
 </PreferenceScreen>
diff --git a/src/com/android/phone/Constants.java b/src/com/android/phone/Constants.java
index 64414e99..bd40393a 100644
--- a/src/com/android/phone/Constants.java
+++ b/src/com/android/phone/Constants.java
@@ -124,6 +124,11 @@
         EXITED_ECM
     }
 
+    /**
+     * Enable proximity sensor or not. 0 = Off 1 = On
+     */
+    public static final String SETTINGS_PROXIMITY_SENSOR = "proximity_sensor";
+
     //
     // TODO: Move all the various EXTRA_* and intent action constants here too.
     // (Currently they're all over the place: InCallScreen,
diff --git a/src/com/android/phone/settings/PhoneAccountSettingsFragment.java b/src/com/android/phone/settings/PhoneAccountSettingsFragment.java
index 670f98d1..620d8141 100644
--- a/src/com/android/phone/settings/PhoneAccountSettingsFragment.java
+++ b/src/com/android/phone/settings/PhoneAccountSettingsFragment.java
@@ -13,6 +13,7 @@
 import android.preference.PreferenceCategory;
 import android.preference.PreferenceFragment;
 import android.preference.SwitchPreference;
+import android.provider.Settings;
 import android.telecom.PhoneAccount;
 import android.telecom.PhoneAccountHandle;
 import android.telecom.TelecomManager;
@@ -23,6 +24,7 @@
 import android.util.Log;
 
 import com.android.internal.telephony.Phone;
+import com.android.phone.Constants;
 import com.android.phone.PhoneUtils;
 import com.android.phone.R;
 import com.android.phone.SubscriptionInfoHelper;
@@ -51,6 +53,8 @@
     private static final String USE_SIP_PREF_KEY = "use_sip_calling_options_key";
     private static final String SIP_RECEIVE_CALLS_PREF_KEY = "sip_receive_calls_key";
 
+    private static final String BUTTON_PROXIMITY_KEY   = "button_proximity_key";
+
     private static final String LEGACY_ACTION_CONFIGURE_PHONE_ACCOUNT =
             "android.telecom.action.CONNECTION_SERVICE_CONFIGURE";
 
@@ -75,6 +79,7 @@
     private ListPreference mUseSipCalling;
     private SwitchPreference mSipReceiveCallsPreference;
     private SipPreferences mSipPreferences;
+    private SwitchPreference mButtonProximity;
 
     @Override
     public void onCreate(Bundle icicle) {
@@ -183,6 +188,16 @@ public void onResume() {
             getPreferenceScreen().removePreference(
                     getPreferenceScreen().findPreference(SIP_SETTINGS_CATEGORY_PREF_KEY));
         }
+
+        mButtonProximity = (SwitchPreference) findPreference(BUTTON_PROXIMITY_KEY);
+        if (mButtonProximity != null) {
+            mButtonProximity.setOnPreferenceChangeListener(this);
+            boolean checked = Settings.System.getInt(getContext().getContentResolver(),
+                    Constants.SETTINGS_PROXIMITY_SENSOR, 1) == 1;
+            mButtonProximity.setChecked(checked);
+            mButtonProximity.setSummary(checked ? R.string.proximity_on_summary
+                    : R.string.proximity_off_summary);
+        }
     }
 
     /**
@@ -208,6 +223,13 @@ public void run() {
                 }
             }).start();
             return true;
+        } else if (pref == mButtonProximity) {
+            boolean checked = (Boolean) objValue;
+            Settings.System.putInt(getContext().getContentResolver(),
+                    Constants.SETTINGS_PROXIMITY_SENSOR, checked ? 1 : 0);
+            mButtonProximity.setSummary(checked ? R.string.proximity_on_summary
+                    : R.string.proximity_off_summary);
+            return true;
         }
         return false;
     }
